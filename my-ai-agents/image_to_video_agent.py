# This is your second AI agent: The Animation Agent!
# It will generate videos from images using a real AI service.

import requests
import json
import os
import time
from datetime import datetime
# Load your API token
with open('.env', 'r') as f:
    token = f.read().strip().split('=')[1]

def generate_video_from_image(image_path, animation_prompt, duration_seconds=4):
    """
    Generate a REAL video using Hugging Face AI's damo-vilab text-to-video model.
    (We're currently using the prompt only, as image-to-video requires special access.)
    """
    print(f"üé¨ Animating: '{animation_prompt}' based on image '{image_path}'")
    print(f"‚è≥ This might take 30+ seconds...")

    API_URL = "https://api-inference.huggingface.co/models/damo-vilab/modelscope-damo-text-to-video"
    headers = {"Authorization": f"Bearer {token}"}

    # Send the prompt (no image upload for this model)
    payload = {
        "inputs": animation_prompt
    }

    response = requests.post(API_URL, headers=headers, json=payload)

    if response.status_code == 200 and response.headers.get("content-type", "").startswith("video"):
        # Save the video content
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        video_filename = f"animated_{timestamp}.mp4"
        with open(video_filename, 'wb') as f:
            f.write(response.content)
        print(f"‚úÖ Video saved as: {video_filename}")
        return {
            "status": "success",
            "filename": video_filename,
            "prompt": animation_prompt
        }
    elif "application/json" in response.headers.get("content-type", ""):
        # Some models respond with a URL to video instead of raw content
        try:
            data = response.json()
            video_url = data.get("video_url", "unknown")
            print(f"‚úÖ Video URL returned: {video_url}")
            return {
                "status": "success",
                "url": video_url,
                "prompt": animation_prompt
            }
        except Exception as e:
            print(f"‚ùå Error decoding JSON: {e}")
            return {"status": "error", "message": str(e)}
    else:
        print(f"‚ùå Error: {response.status_code}")
        print(f"Message: {response.text}")
        return {"status": "error", "message": response.text}


# Test our Animation Agent
if __name__ == "__main__":
    print("üé¨ ANIMATION AGENT READY!")
    print("-" * 40)
    
    # This should be the path to one of the images generated by your Image Agent
    # For example, replace 'generated_20250626_021712.png' with your actual image filename
    test_image_path = "generated_20250626_021712.png" 
    animation_prompt_text = "dynamic camera pan from bottom to top, subtle spaceship engine glow, city lights twinkling"

    # Ensure the test image file exists for a more realistic simulation
    if not os.path.exists(test_image_path):
        print(f"‚ùó Warning: Test image '{test_image_path}' not found. Please ensure it's in the same directory.")
        print("üí° You can run your image_agent_real.py first to generate one!")
    
    result = generate_video_from_image(test_image_path, animation_prompt_text, duration_seconds=5)
    print(f"\nüìä Result: {json.dumps(result, indent=2)}")